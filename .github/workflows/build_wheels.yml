name: Build

on:
  workflow_dispatch:
  push:
    branches: ci_experiments      # TODO remove me
    # branches: main
    # paths:
    #   - 'src/cofi_espresso/**'
    #   - 'pyproject.toml'
    #   - 'setup.py'
  pull_request:
    paths:
      - 'src/cofi_espresso/**'
      - 'pyproject.toml'
      - 'setup.py'

jobs:
  build_wheels_windows:
    if: github.repository_owner == 'inlab-geo'
    name: Build wheels on ${{ matrix.os }}
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Provide gfortran (Windows)
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-gcc-fortran
            mingw-w64-x86_64-hdf5
            ming2-w64-x86_64-python
            mingw-w64-x86_64-cmake

      - name: Show gfortran (Windows)
        run: |
          which gcc
          which gfortran
          gcc --version
          gfortran --version

      - uses: actions/checkout@v3

      - name: Generate package source and install 
        run: |
          python -m pip install -r envs/requirements_test.txt
          python tools/build_package/build.py

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        working-directory: _esp_build
        env:
          CIBW_SKIP: pp* *-win32 *-manylinux_i686 *-musllinux_*
          # Package the DLL dependencies in the wheel for windows (done by default for the other platforms).
          # delvewheel cannot mangle the libraries, stripping does not work.
          CIBW_BEFORE_BUILD_WINDOWS: pip install delvewheel
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel show {wheel} && delvewheel repair -w {dest_dir} {wheel} --no-mangle-all"
          # Run the tests.
          # CIBW_TEST_COMMAND: python -m pip install pytest; python ../tools/build_package/validate.py --post

      - uses: actions/upload-artifact@v3
        with:
          path: _esp_build/wheelhouse/*.whl


  # build_wheels_non_windows:
  #   if: github.repository_owner == 'inlab-geo'
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest]

  #   steps:
  #     - name: Symlink gfortran (macOS)
  #       if: runner.os == 'macOS'
  #       run: |
  #         # make sure gfortran is available
  #         # https://github.com/actions/virtual-environments/issues/2524
  #         # https://github.com/cbg-ethz/dce/blob/master/.github/workflows/pkgdown.yaml
  #         sudo ln -s /usr/local/bin/gfortran-10 /usr/local/bin/gfortran
  #         sudo mkdir /usr/local/gfortran
  #         sudo ln -s /usr/local/Cellar/gcc@10/*/lib/gcc/10 /usr/local/gfortran/lib
  #         gfortran --version

  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-python@v3

  #     - name: Generate package source with contributions
  #       run: |
  #         python -m pip install -r envs/requirements_test.txt
  #         python tools/build_package/build.py

  #     - name: Build wheels
  #       run: python -m cibuildwheel --output-dir wheelhouse
  #       working-directory: _esp_build
  #       env:
  #         CIBW_SKIP: pp* *-win32 *-manylinux_i686 *-musllinux_*
  #         CIBW_ARCHS_MACOS: x86_64 arm64
  #         CIBW_REPAIR_WHEEL_MACOS: ""
  #         # Run the tests.
  #         # CIBW_TEST_COMMAND: python -m pip install pytest; python ../tools/build_package/validate.py --post

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: _esp_build/wheelhouse/*.whl
